#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PopulateMath
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ntcirarxiv")]
	public partial class ntcirarxivDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMathMLData(MathMLData instance);
    partial void UpdateMathMLData(MathMLData instance);
    partial void DeleteMathMLData(MathMLData instance);
    #endregion
		
		public ntcirarxivDataContext() : 
				base(global::PopulateMath.Properties.Settings.Default.ntcirarxivConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ntcirarxivDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ntcirarxivDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ntcirarxivDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ntcirarxivDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MathMLData> MathMLDatas
		{
			get
			{
				return this.GetTable<MathMLData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MathMLData")]
	public partial class MathMLData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PaperID;
		
		private string _MathID;
		
		private string _MathObjectID;
		
		private string _Display;
		
		private string _TexExp;
		
		private System.Xml.Linq.XElement _MathMLPresExp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPaperIDChanging(string value);
    partial void OnPaperIDChanged();
    partial void OnMathIDChanging(string value);
    partial void OnMathIDChanged();
    partial void OnMathObjectIDChanging(string value);
    partial void OnMathObjectIDChanged();
    partial void OnDisplayChanging(string value);
    partial void OnDisplayChanged();
    partial void OnTexExpChanging(string value);
    partial void OnTexExpChanged();
    partial void OnMathMLPresExpChanging(System.Xml.Linq.XElement value);
    partial void OnMathMLPresExpChanged();
    #endregion
		
		public MathMLData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperID", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string PaperID
		{
			get
			{
				return this._PaperID;
			}
			set
			{
				if ((this._PaperID != value))
				{
					this.OnPaperIDChanging(value);
					this.SendPropertyChanging();
					this._PaperID = value;
					this.SendPropertyChanged("PaperID");
					this.OnPaperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MathID
		{
			get
			{
				return this._MathID;
			}
			set
			{
				if ((this._MathID != value))
				{
					this.OnMathIDChanging(value);
					this.SendPropertyChanging();
					this._MathID = value;
					this.SendPropertyChanged("MathID");
					this.OnMathIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathObjectID", DbType="NVarChar(10)")]
		public string MathObjectID
		{
			get
			{
				return this._MathObjectID;
			}
			set
			{
				if ((this._MathObjectID != value))
				{
					this.OnMathObjectIDChanging(value);
					this.SendPropertyChanging();
					this._MathObjectID = value;
					this.SendPropertyChanged("MathObjectID");
					this.OnMathObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="NVarChar(10)")]
		public string Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TexExp", DbType="NVarChar(MAX)")]
		public string TexExp
		{
			get
			{
				return this._TexExp;
			}
			set
			{
				if ((this._TexExp != value))
				{
					this.OnTexExpChanging(value);
					this.SendPropertyChanging();
					this._TexExp = value;
					this.SendPropertyChanged("TexExp");
					this.OnTexExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathMLPresExp", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement MathMLPresExp
		{
			get
			{
				return this._MathMLPresExp;
			}
			set
			{
				if ((this._MathMLPresExp != value))
				{
					this.OnMathMLPresExpChanging(value);
					this.SendPropertyChanging();
					this._MathMLPresExp = value;
					this.SendPropertyChanged("MathMLPresExp");
					this.OnMathMLPresExpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
